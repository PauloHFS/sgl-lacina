services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.staging
    container_name: lacina_app_staging
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./docker/staging/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/staging/php/php.ini:/usr/local/etc/php/php.ini
      - lacina_app_public_all_staging:/var/www/html/public
    depends_on:
      db:
        condition: service_healthy
    networks:
      lacina_network_staging:
        aliases:
          - app
    env_file:
      - .env.staging

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.staging
    container_name: lacina_scheduler_staging
    restart: unless-stopped
    working_dir: /var/www/html
    command: bash -c "while true; do php artisan schedule:run --verbose --no-interaction && sleep 60; done"
    volumes:
      - ./docker/staging/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/staging/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    networks:
      - lacina_network_staging
    env_file:
      - .env.staging

  nginx:
    image: nginx:alpine
    container_name: lacina_nginx_staging
    restart: unless-stopped
    ports:
      - '5566:80'
      # - '443:443'
    volumes:
      - ./docker/staging/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - lacina_app_public_all_staging:/var/www/html/public
      # - ./docker/staging/certs:/etc/nginx/certs # For SSL certificates
    depends_on:
      - app
    networks:
      - lacina_network_staging

  mailpit:
    image: axllent/mailpit
    container_name: mailpit_staging
    restart: unless-stopped
    ports:
      - '5567:8025'
    networks:
      lacina_network_staging:
        aliases:
          - mailpit

  db:
    image: postgres:17-alpine
    container_name: lacina_db_staging
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '54329:5432'
    env_file:
      - .env.staging
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      lacina_network_staging:
        aliases:
          - db
    volumes:
      - lacina_pg_data_staging:/var/lib/postgresql/data
      - ./docker/staging/db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  lacina_app_public_all_staging:
    driver: local
  lacina_pg_data_staging:
    driver: local

networks:
  lacina_network_staging:
    driver: bridge
