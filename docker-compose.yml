services:
    app:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        container_name: sgl-lacina_app_dev
        labels:
            - 'com.docker.compose.project=sgl-lacina'
            - 'com.docker.compose.service=app'
            - 'environment=development'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            sgl-lacina_network_dev:
                aliases:
                    - app
        restart: unless-stopped
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
            meilisearch:
                condition: service_healthy
            mailpit:
                condition: service_started
            selenium:
                condition: service_started
        healthcheck:
            test: ['CMD-SHELL', 'curl -f http://localhost/up || exit 1']
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

    scheduler:
        image: 'sail-8.4/app'
        container_name: sgl-lacina_scheduler_dev
        command: bash -c "while true; do php artisan schedule:run --verbose --no-interaction && sleep 60; done"
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: 'off'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sgl-lacina_network_dev
        restart: unless-stopped
        depends_on:
            app:
                condition: service_healthy
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    queue:
        image: 'sail-8.4/app'
        container_name: sgl-lacina_queue_dev
        command: php artisan queue:work --verbose --tries=${QUEUE_TRIES:-3} --timeout=${QUEUE_TIMEOUT:-90}
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sgl-lacina_network_dev
        restart: unless-stopped
        depends_on:
            app:
                condition: service_healthy
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    db:
        image: 'postgres:17-alpine'
        container_name: sgl-lacina_db_dev
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
            # Configurações de desenvolvimento para melhor performance local
            POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8'
        command: >
            postgres
            -c log_statement=all
            -c log_destination=stderr
            -c logging_collector=on
            -c max_connections=200
            -c shared_buffers=256MB
            -c effective_cache_size=1GB
            -c maintenance_work_mem=64MB
            -c checkpoint_completion_target=0.9
            -c wal_buffers=16MB
            -c default_statistics_target=100
        volumes:
            - 'sgl-lacina_db_dev:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            sgl-lacina_network_dev:
                aliases:
                    - pgsql
        restart: unless-stopped
        healthcheck:
            test:
                ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    mailpit:
        image: 'axllent/mailpit:latest'
        container_name: sgl-lacina_mailpit_dev
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        restart: unless-stopped
        networks:
            - sgl-lacina_network_dev

    selenium:
        image: selenium/standalone-chromium
        container_name: sgl-lacina_selenium_dev
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        restart: unless-stopped
        networks:
            - sgl-lacina_network_dev

    redis:
        image: 'redis:7.2-alpine'
        container_name: sgl-lacina_redis_dev
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sgl-lacina_redis_dev:/data'
        networks:
            - sgl-lacina_network_dev
        restart: unless-stopped
        healthcheck:
            test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 10s

    meilisearch:
        image: 'getmeili/meilisearch:v1.7'
        container_name: sgl-lacina_meilisearch_dev
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sgl-lacina_meilisearch_dev:/meili_data'
        networks:
            - sgl-lacina_network_dev
        restart: unless-stopped
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:7700/health']
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    adminer:
        image: adminer:4.8.1
        container_name: sgl-lacina_adminer_dev
        ports:
            - '${FORWARD_ADMINER_PORT:-8080}:8080'
        environment:
            ADMINER_DEFAULT_SERVER: db
            ADMINER_DESIGN: pepa-linha-dark
        networks:
            - sgl-lacina_network_dev
        restart: unless-stopped
        profiles:
            - tools
        depends_on:
            db:
                condition: service_healthy

networks:
    sgl-lacina_network_dev:
        driver: bridge

volumes:
    sgl-lacina_db_dev:
        driver: local
    sgl-lacina_redis_dev:
        driver: local
    sgl-lacina_meilisearch_dev:
        driver: local
