services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: sgl-lacina_app_prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
      - sgl-lacina_app_public_all:/var/www/html/public-shared
      - sgl-lacina_app_storage:/var/www/html/storage
    depends_on:
      db:
        condition: service_healthy
    networks:
      sgl-lacina_network_prod:
        aliases:
          - app
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'php-fpm -t || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: sgl-lacina_scheduler_prod
    restart: unless-stopped
    working_dir: /var/www/html
    command: bash -c "while true; do php artisan schedule:run --verbose --no-interaction && sleep 60; done"
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - sgl-lacina_network_prod
    env_file:
      - .env

  queue:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: sgl-lacina_queue_prod
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --verbose --tries=${QUEUE_TRIES:-3} --timeout=${QUEUE_TIMEOUT:-90}
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - sgl-lacina_network_prod
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    container_name: sgl-lacina_nginx_prod
    restart: unless-stopped
    ports:
      - '16000:80'
      # - '443:443'
    volumes:
      - ./docker/prod/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - sgl-lacina_app_public_all:/var/www/html/public
      - sgl-lacina_app_storage:/var/www/html/storage
    depends_on:
      app:
        condition: service_healthy
    networks:
      - sgl-lacina_network_prod

  db:
    image: postgres:17-alpine
    container_name: sgl-lacina_db_prod
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - /var/lib/sgl-lacina/postgresql:/var/lib/postgresql/data
      - ./docker/prod/postgres/backups:/backups
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      sgl-lacina_network_prod: {}

networks:
  sgl-lacina_network_prod:
    driver: bridge

volumes:
  sgl-lacina_app_public_all:
    driver: local
  sgl-lacina_app_storage:
    driver: local
