services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: lacina_app_prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
      - lacina_app_public_all:/var/www/html/public
    depends_on:
      db:
        condition: service_healthy
    networks:
      lacina_network_prod:
        aliases:
          - app
    env_file:
      - .env

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: lacina_scheduler_prod
    restart: unless-stopped
    working_dir: /var/www/html
    command: bash -c "while true; do php artisan schedule:run --verbose --no-interaction && sleep 60; done"
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    networks:
      - lacina_network_prod
    .env_file:
      - .env

  queue:
    image: 'sail-8.4/app'
    command: php artisan queue:work --verbose --tries=${QUEUE_TRIES:-3} --timeout=${QUEUE_TIMEOUT:-90}
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started

  nginx:
    image: nginx:alpine
    container_name: lacina_nginx_prod
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/prod/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - lacina_app_public_all:/var/www/html/public
      # - ./docker/prod/certs:/etc/nginx/certs # For SSL certificates
    depends_on:
      - app
    networks:
      - lacina_network_prod

  db:
    image: postgres:17-alpine
    container_name: lacina_db_prod
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - lacina_pg_data_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      lacina_network_prod: {}

networks:
  lacina_network_prod:
    driver: bridge

volumes:
  lacina_pg_data_prod:
    driver: local
  lacina_app_public_all:
    driver: local
