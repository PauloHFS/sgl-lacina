services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: lacina_app_prod
    restart: unless-stopped
    ports:
      - '9000:9000'
    working_dir: /var/www/html
    volumes:
      - ./docker/prod/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/prod/php/php.ini:/usr/local/etc/php/php.ini
      - lacina_app_public_all:/var/www/html/public
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      meilisearch:
        condition: service_started
    networks:
      lacina_network_prod:
        aliases:
          - app
    environment:
      APP_ENV: production
      APP_DEBUG: 'false'
      APP_KEY: ${APP_KEY}
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      MEILISEARCH_HOST: 'http://meilisearch:7700'

  nginx:
    image: nginx:alpine
    container_name: lacina_nginx_prod
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/prod/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - lacina_app_public_all:/var/www/html/public
      # - ./docker/prod/certs:/etc/nginx/certs # For SSL certificates
    depends_on:
      - app
    networks:
      - lacina_network_prod

  db:
    image: postgres:17-alpine
    container_name: lacina_db_prod
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - lacina_pg_data_prod:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      lacina_network_prod: {}

  redis:
    image: redis:alpine
    container_name: lacina_redis_prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - lacina_redis_data_prod:/data
    networks:
      - lacina_network_prod
    ports:
      - '6379:6379'

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: lacina_meilisearch_prod
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_ENV: production
    volumes:
      - lacina_meili_data_prod:/meili_data
    networks:
      - lacina_network_prod
    ports:
      - '7700:7700'

networks:
  lacina_network_prod:
    driver: bridge

volumes:
  lacina_pg_data_prod:
    driver: local
  lacina_redis_data_prod:
    driver: local
  lacina_meili_data_prod:
    driver: local
  lacina_app_public_all:
    driver: local
